/*
 * hw2.c
 *
 */
#include "student/hw2.h"


/*
 * Use the macros below to print out "Ok" and "Invalid Input"
 * for each command that is entered by the user.
 *
 * Examples
 *      printf(VALID_INPUT);
 *      printf(INVALID_INPUT);
 */
#define VALID_INPUT "\n\r\033[1;32mOk\033[0m\n\r\n\r"
#define INVALID_INPUT "\n\r\033[1;31mInvalid Input\033[0m\n\r\n\r"



/*
 * ADD CODE
 * Modify the the character arrays below with your "Last Name, First Name"
 */
char STUDENT1_NAME[]="Begos, Billy";
char STUDENT2_NAME[]="Name2";


/******************************************************************************
 * Student Defined Global Variables
 *****************************************************************************/
int xCord = 64;
int yCord = 64;
int delay = 25;

/******************************************************************************
 * Student Defined Helper Functions
 *
 * Add any helper functions that you want in the space below.  You can add
 * as many or as few functions as you want.
 *****************************************************************************/

void moveX(int x){
    while(x!=0){
        /**
         * wall collision detection, values had to be brute forced
         * since the model wasnt perfectly symmetric
         */
        if((xCord>=104 && x>0)|| (xCord <= 27 && x<0)){
            return;
        }
    if(x>0){ //right
        xCord++;
        x--;
    }
    else if(x<0){ //left
        xCord--;
        x++;
    }
    //redraw the spaceship, then wait for a delay to draw the next pixel
    //continue until we have either moved the whole distance, or hit the wall
    drawSpaceShip();
    ece353_T32_1_Interrupt_Ms(delay);
    while(!TIMER32_S1){};
    TIMER32_S1 = false;
    }
}

void moveY(int y){
    while(y!=0){
        /**
         * wall collision detection, values had to be brute forced
         * since the model wasnt perfectly symmetric
         */
        if((yCord>=114 && y>0)||(yCord <= 20 && y<0)){
            return;
        }
        //move the center of the ship up/down by 1 pixel
    if(y>0){    //up
        yCord++;
        y--;
    }
    else if(y<0){   //down
        yCord--;
        y++;
    }
    //redraw the spaceship, then wait for a delay to draw the next pixel
    //continue until we have either moved the whole distance, or hit the wall
    drawSpaceShip();
    ece353_T32_1_Interrupt_Ms(delay);
    while(!TIMER32_S1){};
    TIMER32_S1 = false;
    }
}

void drawSpaceShip(void){
    lcd_draw_image(
                    xCord,
                    yCord,
                    space_shipWidthPixels,
                    space_shipHeightPixels,
                    space_shipBitmaps,
                    LCD_COLOR_RED,
                    LCD_COLOR_BLACK
            );
}
/******************************************************************************
 * Initializes all hardware peripherals used in HW2
 *      UART 115200 8N1
 *      SPI  12MHz
 *      T32
 *****************************************************************************/
void hw2_hardware_init(void)
{
    serial_debug_init();

    // MK2 SW2 configure as input
    P3->DIR &= ~BIT5;

    // Initialize LCD
    lcd_init();



}

/******************************************************************************
 * hw2 main function.  This function should never return!
 *****************************************************************************/
void hw2_main(void)
{
    uint8_t pixel_delay = 25;   /* Delay between drawing image in milliseconds */
    uint16_t x = 64;            /* X coordinate of the image (center of image) */
    uint16_t y = 64;            /* Y coordinate of the image (center of image) */

    /* ADD Local Variables as needed*/
    cli_cmd cmd;
    uint16_t param_value;

    hw2_hardware_init();
    hw2_print_team_info();
    hw2_validate_cli();

    lcd_draw_image(
                    x,
                    y,
                    space_shipWidthPixels,
                    space_shipHeightPixels,
                    space_shipBitmaps,
                    LCD_COLOR_RED,
                    LCD_COLOR_BLACK
            );

    while(1)
    {
        if(ALERT_STRING)
                {
                    ALERT_STRING = false;
                    cli_parse_data(Rx_String, &cmd, &param_value);
                    printf(Rx_String);
                        if( cmd==INVALID_CMD || cmd==INVALID_PARAM){
                            printf(INVALID_INPUT);
                        }
                        else{
                            printf(VALID_INPUT);
                            if(cmd == LEFT){
                                moveX(param_value * -1);
                            }
                            else if(cmd == RIGHT){
                                moveX(param_value);
                            }
                            else if(cmd == UP){
                                moveY(param_value * -1);
                            }
                            else if(cmd == DOWN){
                                moveY(param_value);
                            }
                            else if(cmd == SPEED){
                                delay = param_value;
                            }
                        }
                    Rx_Char_Count = 0;
                    memset(Rx_String,0,80);
                }
    }
}

/******************************************************************************
 * STAFF FUNCTIONS BELOW.  DO NOT MODIFY
 *****************************************************************************/

/******************************************************************************
 * Used to print team info
 *****************************************************************************/
void hw2_print_team_info(void)
{
    /* \x1b[2J\x1b[;H - ANSI ESC sequence for clear screen */
        printf("\x1b[2J\x1b[;H");
        printf("************************************\n\r");
        printf("* ECE353 Fall 2022\n\r");
        printf("* %s\n\r",STUDENT1_NAME);
        printf("* %s\n\r",STUDENT2_NAME);
        printf("* ");
        printf(__DATE__);
        printf(", ");
        printf(__TIME__);
        printf("\n\r");
        printf("* HW02                              \n\r");
        printf("************************************\n\r");
}

/******************************************************************************
 * Used to validate cli test cases
 *****************************************************************************/
void hw2_validate_cli(void)
{
    cli_parser_validation();
}



